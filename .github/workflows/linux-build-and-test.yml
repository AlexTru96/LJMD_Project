name: Linux CMake Integration and Unit Test

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  openmpi:
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ secrets.TOKEN }}
    steps:
    - name: download-openmpi
      run: wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
    - name: extract-openmpi
      run: tar -xvf ./openmpi-4.0.2.tar.gz
    - name: configure-openmpi
      run: ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
    - name: install-openmpi
      run: |
        make -j
        sudo make install
    - name: set-openmpi-path
      run: |
        export PATH=${PATH}:/home/${USER}/.openmpi/bin/
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/${USER}/.openmpi/lib/
        echo ${PATH}
        echo ${LD_LIBRARY_PATH}
      
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure with CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_TESTING=YES

    - name: Download googletest and Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build $GITHUB_WORKSPACE/build --config $BUILD_TYPE

    - name: Run Tests
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE -V
